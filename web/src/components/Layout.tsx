import React, { useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport {\n  BarChart3,\n  FileText,\n  Settings,\n  Activity,\n  RefreshCw,\n  Menu,\n  X,\n  Bell,\n  Search,\n  User,\n  Shield,\n  Database,\n  Zap,\n} from 'lucide-react'\nimport { useHealth } from '../hooks/useApi'\n\nconst navigation = [\n  { name: 'Dashboard', href: '/dashboard', icon: BarChart3 },\n  { name: 'Opportunities', href: '/opportunities', icon: FileText },\n  { name: 'Sync Management', href: '/sync', icon: RefreshCw },\n  { name: 'System Health', href: '/health', icon: Activity },\n  { name: 'Settings', href: '/settings', icon: Settings },\n]\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ')\n}\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const location = useLocation()\n  const { data: health } = useHealth()\n\n  const getHealthIcon = () => {\n    if (!health) return <Activity className=\"w-4 h-4 text-gray-400\" />\n    \n    if (health.status === 'healthy') {\n      return <Shield className=\"w-4 h-4 text-green-500\" />\n    } else {\n      return <Zap className=\"w-4 h-4 text-red-500\" />\n    }\n  }\n\n  const getHealthStatus = () => {\n    if (!health) return 'Checking...'\n    return health.status === 'healthy' ? 'All Systems Operational' : 'System Issues Detected'\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* Sidebar for desktop */}\n      <div className=\"hidden lg:flex lg:w-64 lg:flex-col lg:fixed lg:inset-y-0\">\n        <div className=\"flex flex-col flex-grow bg-white border-r border-gray-200 pt-5 pb-4 overflow-y-auto\">\n          <div className=\"flex items-center flex-shrink-0 px-4\">\n            <Database className=\"w-8 h-8 text-primary-600\" />\n            <div className=\"ml-3\">\n              <h1 className=\"text-xl font-bold text-gray-900\">Eyrus SAM</h1>\n              <p className=\"text-sm text-gray-500\">Integration Dashboard</p>\n            </div>\n          </div>\n          \n          {/* Health Status */}\n          <div className=\"mt-6 mx-4\">\n            <div className=\"bg-gray-50 rounded-lg p-3\">\n              <div className=\"flex items-center\">\n                {getHealthIcon()}\n                <div className=\"ml-3\">\n                  <p className=\"text-sm font-medium text-gray-900\">System Status</p>\n                  <p className=\"text-xs text-gray-500\">{getHealthStatus()}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <nav className=\"mt-6 flex-1 px-2 space-y-1\">\n            {navigation.map((item) => {\n              const isActive = location.pathname === item.href\n              return (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={classNames(\n                    isActive\n                      ? 'bg-primary-50 border-primary-500 text-primary-700'\n                      : 'border-transparent text-gray-600 hover:bg-gray-50 hover:text-gray-900',\n                    'group flex items-center px-3 py-2 text-sm font-medium border-l-4 transition-colors'\n                  )}\n                >\n                  <item.icon\n                    className={classNames(\n                      isActive ? 'text-primary-500' : 'text-gray-400 group-hover:text-gray-500',\n                      'mr-3 h-5 w-5 transition-colors'\n                    )}\n                  />\n                  {item.name}\n                </Link>\n              )\n            })}\n          </nav>\n\n          {/* Version info */}\n          <div className=\"flex-shrink-0 flex border-t border-gray-200 p-4\">\n            <div className=\"flex items-center\">\n              <div>\n                <p className=\"text-xs font-medium text-gray-900\">Version 1.0.0</p>\n                <p className=\"text-xs text-gray-500\">Enterprise Edition</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile sidebar */}\n      {sidebarOpen && (\n        <div className=\"fixed inset-0 flex z-40 lg:hidden\">\n          <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" onClick={() => setSidebarOpen(false)} />\n          <div className=\"relative flex-1 flex flex-col max-w-xs w-full bg-white\">\n            <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n              <button\n                type=\"button\"\n                className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n                onClick={() => setSidebarOpen(false)}\n              >\n                <X className=\"h-6 w-6 text-white\" />\n              </button>\n            </div>\n            {/* Mobile navigation content */}\n            <div className=\"flex-1 h-0 pt-5 pb-4 overflow-y-auto\">\n              <div className=\"flex-shrink-0 flex items-center px-4\">\n                <Database className=\"w-8 h-8 text-primary-600\" />\n                <div className=\"ml-3\">\n                  <h1 className=\"text-xl font-bold text-gray-900\">Eyrus SAM</h1>\n                  <p className=\"text-sm text-gray-500\">Integration Dashboard</p>\n                </div>\n              </div>\n              <nav className=\"mt-5 px-2 space-y-1\">\n                {navigation.map((item) => {\n                  const isActive = location.pathname === item.href\n                  return (\n                    <Link\n                      key={item.name}\n                      to={item.href}\n                      className={classNames(\n                        isActive\n                          ? 'bg-primary-50 border-primary-500 text-primary-700'\n                          : 'border-transparent text-gray-600 hover:bg-gray-50 hover:text-gray-900',\n                        'group flex items-center px-3 py-2 text-sm font-medium border-l-4'\n                      )}\n                      onClick={() => setSidebarOpen(false)}\n                    >\n                      <item.icon\n                        className={classNames(\n                          isActive ? 'text-primary-500' : 'text-gray-400 group-hover:text-gray-500',\n                          'mr-3 h-5 w-5'\n                        )}\n                      />\n                      {item.name}\n                    </Link>\n                  )\n                })}\n              </nav>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Main content */}\n      <div className=\"lg:pl-64 flex flex-col flex-1\">\n        {/* Top navigation */}\n        <div className=\"sticky top-0 z-10 flex-shrink-0 flex h-16 bg-white shadow\">\n          <button\n            type=\"button\"\n            className=\"px-4 border-r border-gray-200 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500 lg:hidden\"\n            onClick={() => setSidebarOpen(true)}\n          >\n            <Menu className=\"h-6 w-6\" />\n          </button>\n          \n          <div className=\"flex-1 px-4 flex justify-between\">\n            <div className=\"flex-1 flex\">\n              <div className=\"w-full flex md:ml-0\">\n                <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\n                  <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\n                    <Search className=\"h-5 w-5\" />\n                  </div>\n                  <input\n                    className=\"block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\"\n                    placeholder=\"Search opportunities...\"\n                    type=\"search\"\n                  />\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"ml-4 flex items-center md:ml-6\">\n              <button\n                type=\"button\"\n                className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n              >\n                <Bell className=\"h-6 w-6\" />\n              </button>\n\n              <div className=\"ml-3 relative\">\n                <div className=\"flex items-center\">\n                  <button\n                    type=\"button\"\n                    className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n                  >\n                    <User className=\"h-8 w-8 rounded-full bg-gray-200 p-1 text-gray-600\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Page content */}\n        <main className=\"flex-1\">\n          <div className=\"py-6\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 md:px-8\">\n              {children}\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n"